levels=1:2 keys_zone=jscache:100m inactive=30d  use_temp_path=off max_size=100m;

# Disable logging for medias (resize/convert)
map $request $loggable {
    ~/media/* 0;
    default 1;
}

upstream gwsocket {
  server 127.0.0.1:7890;
}

server {
    listen      80;
    listen      [::]:80;
    server_name localhost;


    # SSL
{% if self_signed %}
    ssl_certificate /etc/letsencrypt/dev/{{ domain }}.crt;
    ssl_certificate_key /etc/letsencrypt/dev/{{ domain }}.key;
{% else %}
    ssl_certificate         /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain }}/chain.pem;
{% endif %}


    # security
    include     nginxconfig.io/security.conf;

    # logging
    access_log  /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log   /var/log/nginx/error.log warn;

    # reverse proxy
    location / {
        proxy_pass            http://localhost:3333;
        proxy_set_header Host $host;
        include               nginxconfig.io/proxy.conf;
    }


     # GoAccess report
    location ~ ^/report.html$ {
        auth_request     /index.html;
        auth_request_set $auth_status $upstream_status;
	add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'";
    }

    location /goaccessws {
        proxy_pass http://gwsocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_buffering off;
        proxy_read_timeout 7d;
        
        # If you need authentication, use AdonisJS middleware
        # auth_request /auth;  # Point to your Adonis auth endpoint
    }

    # additional config
    include nginxconfig.io/general.conf;
}


# subdomains redirect
server {
    listen                  443 ssl http2;
    listen                  [::]:443 ssl http2;
    server_name             *.{{ domain }};

    # SSL
{% if self_signed %}
    ssl_certificate /etc/letsencrypt/dev/{{ domain }}.crt;
    ssl_certificate_key /etc/letsencrypt/dev/{{ domain }}.key;
{% else %}
    ssl_certificate         /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain }}/chain.pem;
{% endif %}
    return                  301 https://{{ domain }}$request_uri;
}

# subdomains redirect
server {
    listen      80;
    listen      [::]:80;
    server_name *.localhost;
    return      301 http://localhost:3333$request_uri;
}